	// VARIABLES

	$small: 300px;
	$medium: 600px;
	$large: 900px;

	// MIXINS

	@mixin prefixr($property, $value, $prefixes: (webkit, moz, ms, o) ) {
		@each $prefix in $prefixes {
			-#{$prefix}-#{$property}: #{$value};
		}
		#{$property}: #{$value};
	}

	@mixin whiteSpaceReset() {
		font-size: 0;
	}

	@mixin keyframes($name) {
	  @-webkit-keyframes #{$name} {
	    @content;
	  }
	  @-moz-keyframes #{$name} {
	    @content;
	  }
	  @-ms-keyframes #{$name} {
	    @content;
	  }
	  @keyframes #{$name} {
	    @content;
	  }
	}

	@mixin ribbon($color: #e74c3c, $textColor: white, $size: 30px, $ribbonPosition: bottom) {

		// if the direction of the ribbon is neither "bottom" or "top", set the position to "bottom"
		@if ($ribbonPosition != bottom and $ribbonPosition != top) {
			$ribbonPosition: bottom;
		}

		@if ($ribbonPosition == bottom) {
				//@include translate(30px);
				@include prefixr(transform, translateY(30px));
		}
		@else {
				@include prefixr(transform, translateY(-30px));
		}

		-webkit-animation: fadeIn .7s ease-in forwards;
		animation: fadeIn .7s ease-in forwards;

		span {
			width: 100px;
			position: relative;
			display: block;
			background: $color;
			color: $textColor;
			text-align: center;
			-webkit-box-sizing: border-box;
			min-width: 160px;
			height: $size*2;
			line-height: $size*2;
			-webkit-transform-style: preserve-3d;


			&:before,
			&:after {
				content: "";
				position: absolute;
				display: block;

				#{$ribbonPosition}: -$size/2;

				border: $size solid darken($color,10%);
				z-index: -1;
				-webkit-transform: translateZ(-1px);
			}

			&:before {
				left: -$size*2 + $size/2;
				border-left-color: transparent;
			}

			&:after {
				right: -$size*2 + $size/2;
				border-right-color: transparent;
			}

			& span:before,
			& span:after {
				content: "";
				position: absolute;
				display: block;
				border-style: solid;

				#{$ribbonPosition}: -$size/2;

				@if $ribbonPosition == bottom {
					border-color: darken($color, 30%) transparent transparent transparent;
				}
				@else {
					border-color: transparent transparent darken($color, 30%) transparent;
				}

			}

			& span:before {
				left: 0;

				@if $ribbonPosition == bottom {
					border-width: $size/2 0 0 $size/2;
				}
				@else {
					border-width: 0 0 $size/2 $size/2;
				}

			}

			& span:after {
				right: 0;

				@if $ribbonPosition == bottom {
					border-width: $size/2 $size/2 0 0;
				}
				@else {
					 border-width: 0 $size/2 $size/2 0;
				}
			}
		}
	}

	@mixin fromWidth($size) {

		@media screen and(min-width: $size) {
			@content;
		}

	}

	@mixin medium() {
		@include fromWidth($medium) {
			@content;
		}
	}

	@mixin large() {
		@include fromWidth($large) {
			@content;
		}
	}

	// ANIMATION
	@include keyframes(fadeIn) {
		0% { opacity: 0; }
		100% { @include prefixr(transform,translateY(0)); opacity: 1; }
	}

